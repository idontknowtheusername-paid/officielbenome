import bcrypt from 'bcryptjs';
import User from '../models/User.js';
import sequelize from '../config/database.js';

/**
 * Script pour r√©initialiser le mot de passe d'un utilisateur
 * Usage: node scripts/reset-user-password.js <email> <nouveau_mot_de_passe>
 */

const resetUserPassword = async (email, newPassword) => {
  try {
    // Se connecter √† la base de donn√©es
    await sequelize.authenticate();
    console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie');

    // Trouver l'utilisateur
    const user = await User.findOne({ where: { email } });
    
    if (!user) {
      console.error('‚ùå Utilisateur non trouv√© avec cet email:', email);
      process.exit(1);
    }

    console.log('‚úÖ Utilisateur trouv√©:', {
      id: user.id,
      email: user.email,
      firstName: user.firstName,
      lastName: user.lastName
    });

    // Hasher le nouveau mot de passe
    const salt = await bcrypt.genSalt(12);
    const hashedPassword = await bcrypt.hash(newPassword, salt);

    // Mettre √† jour l'utilisateur
    await user.update({ password: hashedPassword });

    console.log('‚úÖ Mot de passe mis √† jour avec succ√®s');
    console.log('üìß Email:', email);
    console.log('üîë Nouveau mot de passe:', newPassword);

    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
    process.exit(1);
  }
};

// R√©cup√©rer les arguments de ligne de commande
const args = process.argv.slice(2);

if (args.length !== 2) {
  console.log('Usage: node scripts/reset-user-password.js <email> <nouveau_mot_de_passe>');
  console.log('Exemple: node scripts/reset-user-password.js test@gmail.com "NouveauMotDePasse123!"');
  process.exit(1);
}

const [email, newPassword] = args;

// Valider le mot de passe
if (newPassword.length < 8) {
  console.error('‚ùå Le mot de passe doit contenir au moins 8 caract√®res');
  process.exit(1);
}

console.log('üîÑ R√©initialisation du mot de passe...');
resetUserPassword(email, newPassword); 